{"version":3,"sources":["Sidebar/SidebarMessage/SidebarMessage.jsx","Sidebar/Sidebar.jsx","Provider/index.js","Chat/ChatHeader/ChatHeader.jsx","Chat/ChatBody/ChatMessage/ChatMessage.jsx","Chat/ChatBody/ChatBody.jsx","Chat/Chat.jsx","WelcomeScreen/WelcomeScreen.jsx","App.js","reducer/index.js","serviceWorker.js","index.js"],"names":["SidebarMessage","className","Avatar","src","process","Sidebar","useState","isInputFocus","setIsInputFocus","IconButton","type","name","id","placeholder","onBlur","onFocus","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","ChatHeader","ChatMessage","receiver","ChatBody","style","background","Chat","WelcomeScreen","alt","href","target","rel","App","useContext","selectedUser","actionTypes","state","action","payload","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.953bc4fe.chunk.js","sourcesContent":["import React from 'react';\nimport { Avatar } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport './SidebarMessage.scss';\n\nfunction SidebarMessage() {\n    return (\n        <div className=\"sidebarMessage\">\n            <Avatar src={`${process.env.PUBLIC_URL}/images/avatar.png`}/>\n            <div className=\"sidebarMessage__message\">\n                <h3>Ayar Hlaine</h3>\n                <p>What?</p>\n            </div>\n            <div className=\"sidebarMessage__time\">\n                <p>8/15/2020</p>\n                <ExpandMoreIcon className=\"sidebarMessage__expand\"/>\n            </div>\n        </div>\n    )\n}\n\nexport default SidebarMessage\n","import React, { useState } from 'react';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport DonutLargeOutlinedIcon from '@material-ui/icons/DonutLargeOutlined';\nimport MessageIcon from '@material-ui/icons/Message';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './Sidebar.scss';\nimport SidebarMessage from './SidebarMessage/SidebarMessage';\nfunction Sidebar() {\n    const [isInputFocus, setIsInputFocus] = useState(false);\n    const onInputFocusIn = () => {\n        setIsInputFocus(true);\n    }\n    const onInputFocusOut = () => {\n        setIsInputFocus(false);\n    }\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__header\">\n                <Avatar />\n                <div className=\"sidebar__headerRight\">\n                    <IconButton >\n                        <DonutLargeOutlinedIcon />\n                    </IconButton>\n                    <IconButton >\n                        <MessageIcon />\n                    </IconButton>\n                    <IconButton >\n                        <MoreVertIcon />\n                    </IconButton>\n                </div>\n            </div>\n            <div className={`sidebar__search ${isInputFocus ? 'sidebar__search--focus':''}`}>\n                <div className=\"sidebar__searchContainer\">\n                    {\n                        isInputFocus ? \n                        <ArrowBackIcon />:\n                        <SearchIcon />\n                    }\n                    <input type=\"text\" \n                    name=\"searchmessage\" \n                    id=\"searchmessage\" \n                    placeholder={'Search or start a new chat'} \n                    onBlur={onInputFocusOut}\n                    onFocus={onInputFocusIn}/>\n                </div>\n            </div>\n            <hr/>\n            <div className=\"sidebar__messages\">\n                <SidebarMessage />\n                <SidebarMessage />\n                <SidebarMessage />\n                <SidebarMessage />\n                <SidebarMessage />\n                <SidebarMessage />\n                <SidebarMessage />\n                <SidebarMessage />\n                <SidebarMessage />\n                <SidebarMessage />\n                <SidebarMessage />\n                <SidebarMessage />\n                <SidebarMessage />\n                <SidebarMessage />\n                <SidebarMessage />\n                <SidebarMessage />\n                <SidebarMessage />\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","import React from 'react';\nimport { createContext, useContext, useReducer } from 'react';\n\nconst StateContext = createContext();\n\nconst StateProvider = ({reducer, initialState, children}) => (\n    <StateContext.Provider value={useReducer(reducer, initialState)}>\n        { children }\n    </StateContext.Provider>\n);\n\nconst useStateValue = () => useContext(StateContext);\n\nexport { StateContext, StateProvider, useStateValue };","import React from 'react';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AttachFileIcon from '@material-ui/icons/AttachFile'; \nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport './ChatHeader.scss';\nfunction ChatHeader() {\n    return (\n        <div className=\"chatHeader\">\n            <Avatar src={`${process.env.PUBLIC_URL}/images/avatar.png`}/>\n            <div className=\"chatHeader__info\">\n                <h3 className=\"chatHeader__info__text\">Ayar Hlaine</h3>\n                <p className=\"chatHeader__info__text\">last seen at 7/24/2020</p>\n            </div>\n            <div className=\"chatHeader__icons\">\n                <IconButton >\n                    <SearchIcon />\n                </IconButton>\n                <IconButton >\n                    <AttachFileIcon />\n                </IconButton>\n                <IconButton >\n                    <MoreVertIcon />\n                </IconButton>\n            </div>\n        </div>\n    )\n}\n\nexport default ChatHeader\n","import React from 'react';\nimport './ChatMessage.scss';\nfunction ChatMessage({receiver}) {\n    return (\n        <div className=\"chatMessage\">\n            <p className={`chatMessage__container ${receiver && 'chat__receiver'}`}>\n                <span className=\"chatMessage__senderName\">Ayar Hlaine</span>\n                Hello Guys\n                <span className=\"chatMessage__time\">2:02 PM</span>\n            </p>\n        </div>\n    )\n}\n\nexport default ChatMessage\n","import React from 'react'\nimport './ChatBody.scss';\nimport ChatMessage from './ChatMessage/ChatMessage';\nfunction ChatBody() {\n    // const imageURL = `${process.env.PUBLIC_URL}/images/whatsapp-background.png`;\n    const imageURL = `https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png`;\n    return (\n        <div className=\"chatBody\" style={{ background: `url(${imageURL})`}}>\n            <ChatMessage />\n            <ChatMessage />\n            <ChatMessage receiver/>\n            <ChatMessage />\n            <ChatMessage receiver/>\n            <ChatMessage />\n            <ChatMessage receiver/>\n            <ChatMessage />\n            <ChatMessage receiver/>\n            <ChatMessage />\n            <ChatMessage receiver/>\n            <ChatMessage />\n            <ChatMessage receiver/>\n            <ChatMessage />\n            <ChatMessage receiver/>\n            <ChatMessage />\n            <ChatMessage receiver/>\n            <ChatMessage />\n            <ChatMessage receiver/>\n            <ChatMessage />\n            <ChatMessage receiver/>\n            <ChatMessage />\n            <ChatMessage receiver/>\n            <ChatMessage />\n            <ChatMessage receiver/>\n            <ChatMessage />\n            <ChatMessage receiver/>\n            <ChatMessage />\n            <ChatMessage receiver/>\n            <ChatMessage />\n            <ChatMessage receiver/>\n            <ChatMessage />\n            <ChatMessage receiver/>\n        </div>\n    )\n}\n\nexport default ChatBody\n","import React from 'react'\nimport './Chat.scss';\nimport ChatHeader from './ChatHeader/ChatHeader';\nimport ChatBody from './ChatBody/ChatBody';\nfunction Chat() {\n    return (\n        <div className=\"chat\">\n            <ChatHeader />\n            <ChatBody />\n            {/* Chat Message Input */}\n        </div>\n    )\n}\n\nexport default Chat\n","import React from 'react';\nimport ComputerIcon from '@material-ui/icons/Computer';\nimport './WelcomeScreen.scss';\nfunction WelcomeScreen() {\n    return (\n        <div className=\"welcomeScreen\">\n            <div className=\"welcomeScreenContainer\">\n                <img src={`${process.env.PUBLIC_URL}/images/whatsapp-logo.png`} alt=\"\"/>\n                <h3 className=\"welcomeScreen__headerText\">Welcome to WhatsApp</h3>\n                <p className=\"welcomeScreen__text\">\n                    WhatsApp clone app using React JS. Cloned By \n                    <span>&nbsp;Ayar Hlaine</span>\n                </p>\n                <hr/>\n                <div className=\"welcomeScreen__originalSiteLinkContainer\">\n                    <p className=\"welcomeScreen__originalSiteLink\">\n                        <ComputerIcon />\n                        Official WhatsApp is available at \n                        <a href=\"https://www.whatsapp.com/download\" target=\"_blank\" rel=\"noopener noreferrer\">\n                        &nbsp;here\n                        </a>\n                        .\n                    </p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default WelcomeScreen\n","import React from 'react';\nimport './App.scss';\nimport Sidebar from './Sidebar/Sidebar';\nimport { useStateValue } from './Provider';\nimport Chat from './Chat/Chat';\nimport WelcomeScreen from './WelcomeScreen/WelcomeScreen';\n\nfunction App() {\n  const [{selectedUser}, ] = useStateValue();\n  return (\n    <div className=\"app\">\n      <div className=\"app_body\">\n        <Sidebar />\n        {\n          selectedUser ?\n          <Chat />\n          :\n          <WelcomeScreen />\n        }\n        {/* Chat */}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","export const initialState = {\n    selectedUser: 'AyarHlaine',\n};\nexport const actionTypes = {\n    SET_SELECTED_USER: \"SET_SELECTED_USER\",\n};\nexport const reducer = (state , action) => {\n    switch(action.type){\n        case actionTypes.SET_SELECTED_USER: {\n            return {\n                ...state,\n                selectedUser: action.payload,\n            }\n        }\n        default: return state;\n    }\n}\n\nexport default reducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport { StateProvider } from './Provider';\nimport { reducer, initialState } from './reducer';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider reducer={reducer} initialState={initialState}>\n    <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}